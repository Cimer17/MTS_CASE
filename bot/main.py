from aiogram import Dispatcher, Bot, types, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import asyncio
import configparser
import logging

config = configparser.ConfigParser()
config.read("settings.ini")
tokenBot = config["bot"]["bot_token"]

bot = Bot(token=tokenBot)
dp = Dispatcher(bot, storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)

# —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ü–µ–Ω–∞ - 3 —Ä—É–±–ª—è –º–∏–Ω—É—Ç–∞
menu_buttons = ['üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∫–æ–ª–ª–µ–≥', 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'üë§ –ü—Ä–æ—Ñ–∏–ª—å', '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏']
subscription = ['üëë 1 –º–µ—Å—è—Ü - 43200 —Ä—É–±.', 'üëë 6 –º–µ—Å—è—Ü–µ–≤ - 250 000 —Ä—É–±.', 'üëë 12 –º–µ—Å—è—Ü–µ–≤ - 510 000 —Ä—É–±.','–í—ã—Ö–æ–¥']

def keyboards_create(ListNameBTN, NumberColumns=2):
    keyboards = types.ReplyKeyboardMarkup(
        row_width=NumberColumns, resize_keyboard=True)
    btn_names = [types.KeyboardButton(text=x) for x in ListNameBTN]
    keyboards.add(*btn_names)
    return keyboards

@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
        await message.answer(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.username}!', reply_markup=keyboards_create(menu_buttons))


@dp.message_handler(text='üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')
async def spam_comments(message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏:', reply_markup=keyboards_create(subscription))

if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    executor.start_polling(dp, loop=loop, skip_updates=True)